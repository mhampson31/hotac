# Generated by Django 3.0.6 on 2020-05-25 23:10

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions
import django.utils.timezone
import mptt.fields
import smart_selects.db_fields


class Migration(migrations.Migration):

    replaces = [('campaign', '0001_initial'), ('campaign', '0002_auto_20200518_1511'), ('campaign', '0003_auto_20200518_1538'), ('campaign', '0004_auto_20200518_2024'), ('campaign', '0005_auto_20200519_0031'), ('campaign', '0006_auto_20200519_0042'), ('campaign', '0007_ship_faction'), ('campaign', '0008_auto_20200520_0224'), ('campaign', '0009_auto_20200520_1131'), ('campaign', '0010_auto_20200520_1153'), ('campaign', '0011_auto_20200520_2019'), ('campaign', '0012_auto_20200522_0108'), ('campaign', '0013_auto_20200522_1508'), ('campaign', '0014_auto_20200522_1557'), ('campaign', '0015_auto_20200522_2018'), ('campaign', '0016_auto_20200522_2136'), ('campaign', '0017_auto_20200522_2225'), ('campaign', '0018_auto_20200523_1313'), ('campaign', '0019_campaign_pool_xp'), ('campaign', '0020_remove_pilot_total_xp'), ('campaign', '0021_auto_20200523_1739'), ('campaign', '0022_auto_20200523_2138'), ('campaign', '0023_ai_version'), ('campaign', '0024_auto_20200524_1442'), ('campaign', '0025_auto_20200524_2233'), ('campaign', '0026_auto_20200525_1552'), ('campaign', '0027_auto_20200525_1629'), ('campaign', '0028_auto_20200525_2047'), ('campaign', '0029_auto_20200525_2106'), ('campaign', '0030_auto_20200525_2108'), ('campaign', '0031_auto_20200525_2216'), ('campaign', '0032_auto_20200525_2218')]

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('xwtools', '0002_auto_20200520_0224'),
        ('xwtools', '0019_chassis_css'),
        ('xwtools', '0010_auto_20200522_0108'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flee', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=30)),
                ('victory', models.PositiveSmallIntegerField()),
                ('admin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Dial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_desc', models.CharField(max_length=25)),
                ('long_desc', models.CharField(max_length=60)),
                ('xp', models.SmallIntegerField()),
                ('team', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('story', models.CharField(max_length=30)),
                ('sequence', models.PositiveSmallIntegerField()),
                ('territory', models.CharField(choices=[('F', 'Friendly'), ('N', 'Neutral'), ('H', 'Hostile')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Pilot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('callsign', models.CharField(max_length=30)),
                ('total_xp', models.PositiveSmallIntegerField()),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campaign.Campaign')),
            ],
        ),
        migrations.CreateModel(
            name='Ship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('start_xp', models.PositiveSmallIntegerField(default=0)),
                ('playable', models.BooleanField(default=True)),
                ('dial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campaign.Dial')),
            ],
        ),
        migrations.CreateModel(
            name='Upgrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('type', models.CharField(choices=[('AST', 'Astromech'), ('CNN', 'Cannon'), ('CNF', 'Configuration'), ('CRW', 'Crew'), ('DVC', 'Device'), ('FRC', 'Force Power'), ('GNR', 'Gunner'), ('ILC', 'Illicit'), ('MSL', 'Missile'), ('MOD', 'Modification'), ('SNS', 'Sensor'), ('TAC', 'Tactical Relay'), ('TLN', 'Talent'), ('TCH', 'Tech'), ('TTL', 'Title'), ('TRP', 'Torpedo'), ('TRT', 'Turret'), ('SHP', 'Ship'), ('PLT', 'Pilot'), ('THR', 'Initiative'), ('FCH', 'Force Charge'), ('CHR', 'Charge'), ('WLD', 'Wildcard')], max_length=3)),
                ('type2', models.CharField(blank=True, choices=[('AST', 'Astromech'), ('CNN', 'Cannon'), ('CNF', 'Configuration'), ('CRW', 'Crew'), ('DVC', 'Device'), ('FRC', 'Force Power'), ('GNR', 'Gunner'), ('ILC', 'Illicit'), ('MSL', 'Missile'), ('MOD', 'Modification'), ('SNS', 'Sensor'), ('TAC', 'Tactical Relay'), ('TLN', 'Talent'), ('TCH', 'Tech'), ('TTL', 'Title'), ('TRP', 'Torpedo'), ('TRT', 'Turret'), ('SHP', 'Ship'), ('PLT', 'Pilot'), ('THR', 'Initiative'), ('FCH', 'Force Charge'), ('CHR', 'Charge'), ('WLD', 'Wildcard')], default=None, max_length=3, null=True)),
                ('cost', models.PositiveSmallIntegerField()),
                ('charges', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ['type', '-type2', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TreeSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('threat', models.PositiveSmallIntegerField()),
                ('cost', models.PositiveSmallIntegerField()),
                ('type', models.CharField(choices=[('AST', 'Astromech'), ('CNN', 'Cannon'), ('CNF', 'Configuration'), ('CRW', 'Crew'), ('DVC', 'Device'), ('FRC', 'Force Power'), ('GNR', 'Gunner'), ('ILC', 'Illicit'), ('MSL', 'Missile'), ('MOD', 'Modification'), ('SNS', 'Sensor'), ('TAC', 'Tactical Relay'), ('TLN', 'Talent'), ('TCH', 'Tech'), ('TTL', 'Title'), ('TRP', 'Torpedo'), ('TRT', 'Turret'), ('SHP', 'Ship'), ('PLT', 'Pilot'), ('THR', 'Initiative'), ('FCH', 'Force Charge'), ('CHR', 'Charge'), ('WLD', 'Wildcard')], max_length=3)),
                ('type2', models.CharField(blank=True, choices=[('AST', 'Astromech'), ('CNN', 'Cannon'), ('CNF', 'Configuration'), ('CRW', 'Crew'), ('DVC', 'Device'), ('FRC', 'Force Power'), ('GNR', 'Gunner'), ('ILC', 'Illicit'), ('MSL', 'Missile'), ('MOD', 'Modification'), ('SNS', 'Sensor'), ('TAC', 'Tactical Relay'), ('TLN', 'Talent'), ('TCH', 'Tech'), ('TTL', 'Title'), ('TRP', 'Torpedo'), ('TRT', 'Turret'), ('SHP', 'Ship'), ('PLT', 'Pilot'), ('THR', 'Initiative'), ('FCH', 'Force Charge'), ('CHR', 'Charge'), ('WLD', 'Wildcard')], default=None, max_length=3, null=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='campaign.TreeSlot')),
                ('ship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campaign.Ship')),
            ],
            options={
                'ordering': ['threat', 'id', 'cost'],
            },
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('threat', models.PositiveSmallIntegerField()),
                ('cost', models.PositiveSmallIntegerField()),
                ('type', models.CharField(choices=[('AST', 'Astromech'), ('CNN', 'Cannon'), ('CNF', 'Configuration'), ('CRW', 'Crew'), ('DVC', 'Device'), ('FRC', 'Force Power'), ('GNR', 'Gunner'), ('ILC', 'Illicit'), ('MSL', 'Missile'), ('MOD', 'Modification'), ('SNS', 'Sensor'), ('TAC', 'Tactical Relay'), ('TLN', 'Talent'), ('TCH', 'Tech'), ('TTL', 'Title'), ('TRP', 'Torpedo'), ('TRT', 'Turret'), ('SHP', 'Ship'), ('PLT', 'Pilot'), ('THR', 'Initiative'), ('FCH', 'Force Charge'), ('CHR', 'Charge'), ('WLD', 'Wildcard')], max_length=3)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='campaign.Slot')),
                ('ship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campaign.Ship')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('outcome', models.CharField(choices=[('V', 'Victory'), ('F', 'Failure'), ('U', 'Unresolved')], default='U', max_length=1)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campaign.Campaign')),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campaign.Mission')),
                ('pilots', models.ManyToManyField(to='campaign.Pilot')),
            ],
        ),
        migrations.CreateModel(
            name='PilotShip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pilot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campaign.Pilot')),
                ('ship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campaign.Ship')),
                ('unlocked', models.ManyToManyField(to='campaign.Slot')),
            ],
        ),
        migrations.AddField(
            model_name='pilot',
            name='upgrades',
            field=models.ManyToManyField(to='campaign.Upgrade'),
        ),
        migrations.AddField(
            model_name='pilot',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DialManeuver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speed', models.PositiveSmallIntegerField()),
                ('move', models.CharField(choices=[('S', 'Straight'), ('B', 'Bank'), ('T', 'Turn'), ('KT', 'K-Turn'), ('TR', 'Tallon Roll'), ('SL', 'Sloop'), ('RB', 'Reverse Bank'), ('SS', 'Stationary')], max_length=3)),
                ('bearing', models.CharField(blank=True, choices=[('L', 'Left'), ('R', 'Right')], max_length=1, null=True)),
                ('color', models.CharField(choices=[('B', 'Blue'), ('W', 'White'), ('R', 'Red')], default='W', max_length=1)),
                ('dial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campaign.Dial')),
            ],
        ),
        migrations.CreateModel(
            name='AIManeuver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direction', models.CharField(choices=[('BE', 'Bullseye'), ('FR', 'Front (Right)'), ('RF', 'Right (Front)'), ('RA', 'Right (Rear)'), ('AR', 'Rear (Right)'), ('FL', 'Front (Left)'), ('LF', 'Left (Front)'), ('LA', 'Left (Rear)'), ('AL', 'Rear (Left)')], max_length=2)),
                ('range', models.CharField(choices=[('1', 'R1/R2 Closing'), ('2', 'R3/R2 Fleeing'), ('3', 'R4+'), ('4', 'Stressed')], max_length=1)),
                ('ai', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campaign.AI')),
                ('roll_1', smart_selects.db_fields.ChainedForeignKey(chained_field='ai', chained_model_field='dial', on_delete=django.db.models.deletion.CASCADE, related_name='roll_1', to='campaign.DialManeuver')),
                ('roll_2', smart_selects.db_fields.ChainedForeignKey(chained_field='ai', chained_model_field='dial', on_delete=django.db.models.deletion.CASCADE, related_name='roll_2', to='campaign.DialManeuver')),
                ('roll_3', smart_selects.db_fields.ChainedForeignKey(chained_field='ai', chained_model_field='dial', on_delete=django.db.models.deletion.CASCADE, related_name='roll_3', to='campaign.DialManeuver')),
                ('roll_4', smart_selects.db_fields.ChainedForeignKey(chained_field='ai', chained_model_field='dial', on_delete=django.db.models.deletion.CASCADE, related_name='roll_4', to='campaign.DialManeuver')),
                ('roll_5', smart_selects.db_fields.ChainedForeignKey(chained_field='ai', chained_model_field='dial', on_delete=django.db.models.deletion.CASCADE, related_name='roll_5', to='campaign.DialManeuver')),
                ('roll_6', smart_selects.db_fields.ChainedForeignKey(chained_field='ai', chained_model_field='dial', on_delete=django.db.models.deletion.CASCADE, related_name='roll_6', to='campaign.DialManeuver')),
            ],
        ),
        migrations.AddField(
            model_name='ai',
            name='dial',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campaign.Dial'),
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turn', models.PositiveSmallIntegerField()),
                ('threat', models.SmallIntegerField(blank=True, null=True)),
                ('event', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='campaign.Event')),
                ('pilot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campaign.Pilot')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campaign.Session')),
            ],
        ),
        migrations.AddConstraint(
            model_name='dialmaneuver',
            constraint=models.UniqueConstraint(fields=('dial', 'speed', 'move', 'bearing'), name='dial_maneuver'),
        ),
        migrations.AddConstraint(
            model_name='aimaneuver',
            constraint=models.UniqueConstraint(fields=('ai', 'direction', 'range'), name='ai_maneuver'),
        ),
        migrations.RemoveConstraint(
            model_name='aimaneuver',
            name='ai_maneuver',
        ),
        migrations.RemoveConstraint(
            model_name='dialmaneuver',
            name='dial_maneuver',
        ),
        migrations.RenameField(
            model_name='aimaneuver',
            old_name='direction',
            new_name='arc',
        ),
        migrations.RenameField(
            model_name='dialmaneuver',
            old_name='bearing',
            new_name='direction',
        ),
        migrations.AlterField(
            model_name='dial',
            name='name',
            field=models.CharField(max_length=40),
        ),
        migrations.RenameField(
            model_name='dialmaneuver',
            old_name='move',
            new_name='bearing',
        ),
        migrations.AlterModelOptions(
            name='dialmaneuver',
            options={'ordering': ['-speed', django.db.models.expressions.CombinedExpression(django.db.models.expressions.Case(django.db.models.expressions.When(bearing='S', then=django.db.models.expressions.Value(2)), django.db.models.expressions.When(bearing='B', then=django.db.models.expressions.Value(3)), django.db.models.expressions.When(bearing='T', then=django.db.models.expressions.Value(4)), django.db.models.expressions.When(bearing='SL', then=django.db.models.expressions.Value(6)), django.db.models.expressions.When(bearing='KT', then=django.db.models.expressions.Value(8)), output_field=models.SmallIntegerField()), '*', django.db.models.expressions.Case(django.db.models.expressions.When(direction='L', then=django.db.models.expressions.Value(-1)), default=django.db.models.expressions.Value(1), output_field=models.SmallIntegerField()))]},
        ),
        migrations.AlterField(
            model_name='dialmaneuver',
            name='dial',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maneuvers', to='campaign.Dial'),
        ),
        migrations.AlterModelOptions(
            name='dialmaneuver',
            options={'ordering': ['-speed', django.db.models.expressions.CombinedExpression(django.db.models.expressions.Case(django.db.models.expressions.When(bearing='S', then=django.db.models.expressions.Value(1)), django.db.models.expressions.When(bearing='XX', then=django.db.models.expressions.Value(2)), django.db.models.expressions.When(bearing='B', then=django.db.models.expressions.Value(3)), django.db.models.expressions.When(bearing='T', then=django.db.models.expressions.Value(4)), django.db.models.expressions.When(bearing='SL', then=django.db.models.expressions.Value(6)), django.db.models.expressions.When(bearing='KT', then=django.db.models.expressions.Value(8)), output_field=models.SmallIntegerField()), '*', django.db.models.expressions.Case(django.db.models.expressions.When(direction='L', then=django.db.models.expressions.Value(-1)), default=django.db.models.expressions.Value(1), output_field=models.SmallIntegerField()))]},
        ),
        migrations.AlterField(
            model_name='dialmaneuver',
            name='bearing',
            field=models.CharField(choices=[('S', 'Straight'), ('B', 'Bank'), ('T', 'Turn'), ('KT', 'K-Turn'), ('TR', 'Tallon Roll'), ('SL', 'Sloop'), ('RB', 'Reverse Bank'), ('SS', 'Stationary'), ('XX', '--')], max_length=3),
        ),
        migrations.AddField(
            model_name='ship',
            name='slug',
            field=models.SlugField(max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='ship',
            name='name',
            field=models.CharField(max_length=40),
        ),
        migrations.AddField(
            model_name='ship',
            name='faction',
            field=models.CharField(choices=[('RA', 'Rebel Alliance'), ('GE', 'Galactic Empire'), ('SV', 'Scum and Villainy'), ('RS', 'Resistance'), ('FO', 'First Order'), ('GR', 'Republic'), ('SE', 'Seperatist')], default='RA', max_length=2),
        ),
        migrations.CreateModel(
            name='CampaignShip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_xp', models.PositiveSmallIntegerField(default=0)),
                ('playable', models.BooleanField(default=True)),
            ],
        ),
        migrations.AlterField(
            model_name='ai',
            name='dial',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='xwtools.Dial'),
        ),
        migrations.AlterField(
            model_name='aimaneuver',
            name='roll_1',
            field=smart_selects.db_fields.ChainedForeignKey(chained_field='ai', chained_model_field='dial', on_delete=django.db.models.deletion.CASCADE, related_name='roll_1', to='xwtools.DialManeuver'),
        ),
        migrations.AlterField(
            model_name='aimaneuver',
            name='roll_2',
            field=smart_selects.db_fields.ChainedForeignKey(chained_field='ai', chained_model_field='dial', on_delete=django.db.models.deletion.CASCADE, related_name='roll_2', to='xwtools.DialManeuver'),
        ),
        migrations.AlterField(
            model_name='aimaneuver',
            name='roll_3',
            field=smart_selects.db_fields.ChainedForeignKey(chained_field='ai', chained_model_field='dial', on_delete=django.db.models.deletion.CASCADE, related_name='roll_3', to='xwtools.DialManeuver'),
        ),
        migrations.AlterField(
            model_name='aimaneuver',
            name='roll_4',
            field=smart_selects.db_fields.ChainedForeignKey(chained_field='ai', chained_model_field='dial', on_delete=django.db.models.deletion.CASCADE, related_name='roll_4', to='xwtools.DialManeuver'),
        ),
        migrations.AlterField(
            model_name='aimaneuver',
            name='roll_5',
            field=smart_selects.db_fields.ChainedForeignKey(chained_field='ai', chained_model_field='dial', on_delete=django.db.models.deletion.CASCADE, related_name='roll_5', to='xwtools.DialManeuver'),
        ),
        migrations.AlterField(
            model_name='aimaneuver',
            name='roll_6',
            field=smart_selects.db_fields.ChainedForeignKey(chained_field='ai', chained_model_field='dial', on_delete=django.db.models.deletion.CASCADE, related_name='roll_6', to='xwtools.DialManeuver'),
        ),
        migrations.AlterField(
            model_name='pilot',
            name='upgrades',
            field=models.ManyToManyField(to='xwtools.Upgrade'),
        ),
        migrations.RemoveField(
            model_name='pilotship',
            name='unlocked',
        ),
        migrations.AddField(
            model_name='campaign',
            name='ships',
            #field=models.ManyToManyField(through='campaign.CampaignShip', to='xwtools.Ship'),
            field=models.ManyToManyField(through='campaign.CampaignShip', to='xwtools.Chassis'),
        ),
        migrations.AddField(
            model_name='campaignship',
            name='campaign',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='campaign.Campaign'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='campaignship',
            name='chassis',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='xwtools.Chassis'),
            #field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='xwtools.Ship'),
        ),
        migrations.RemoveField(
            model_name='pilotship',
            name='ship',
        ),
        migrations.RemoveField(
            model_name='dialmaneuver',
            name='dial',
        ),
        migrations.RemoveField(
            model_name='ship',
            name='dial',
        ),
        migrations.RemoveField(
            model_name='slot',
            name='parent',
        ),
        migrations.RemoveField(
            model_name='slot',
            name='ship',
        ),
        migrations.RemoveField(
            model_name='treeslot',
            name='parent',
        ),
        migrations.RemoveField(
            model_name='treeslot',
            name='ship',
        ),
        migrations.DeleteModel(
            name='Upgrade',
        ),
        migrations.AddField(
            model_name='campaign',
            name='ship_initiative',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='pilot',
            name='initiative',
            field=models.PositiveSmallIntegerField(default=2),
        ),
        migrations.AddField(
            model_name='pilotship',
            name='initiative',
            field=models.PositiveSmallIntegerField(default=2),
        ),
        migrations.DeleteModel(
            name='Dial',
        ),
        migrations.DeleteModel(
            name='DialManeuver',
        ),
        migrations.DeleteModel(
            name='Ship',
        ),
        migrations.DeleteModel(
            name='Slot',
        ),
        migrations.DeleteModel(
            name='TreeSlot',
        ),
        migrations.RenameModel(
            old_name='CampaignShip',
            new_name='Squadron',
        ),
        migrations.AddField(
            model_name='pilotship',
            name='chassis',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xwtools.Chassis'),
        ),
        migrations.AlterField(
            model_name='event',
            name='long_desc',
            field=models.CharField(max_length=120),
        ),
        migrations.AddField(
            model_name='pilotship',
            name='hull_upgrades',
            field=models.PositiveSmallIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='pilotship',
            name='shield_upgrades',
            field=models.PositiveSmallIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='squadron',
            name='progression',
            field=models.CharField(choices=[('d', 'Default'), ('h', 'HWK-290')], default='d', max_length=1),
        ),
        migrations.AddField(
            model_name='pilot',
            name='path',
            field=models.CharField(choices=[('F', 'Force User'), ('A', 'Ace')], default='A', max_length=1),
        ),
        migrations.AddField(
            model_name='campaign',
            name='pool_xp',
            field=models.BooleanField(default=False),
        ),
        migrations.RemoveField(
            model_name='pilot',
            name='total_xp',
        ),
        migrations.AlterField(
            model_name='aimaneuver',
            name='range',
            field=models.CharField(choices=[('1', 'R1/R2 Closing'), ('2', 'R3/R2 Fleeing'), ('3', 'R4+'), ('4', 'Stressed'), ('5', 'Fleeing'), ('6', 'Decloaking')], max_length=1),
        ),
        migrations.AlterField(
            model_name='squadron',
            name='start_xp',
            field=models.PositiveSmallIntegerField(default=10),
        ),
        migrations.AlterField(
            model_name='aimaneuver',
            name='range',
            field=models.CharField(choices=[('1', 'R1/R2 Closing'), ('2', 'R3/R2 Fleeing'), ('3', 'R4+'), ('4', 'Stressed'), ('5', 'Fleeing')], max_length=1),
        ),
        migrations.AddField(
            model_name='ai',
            name='version',
            field=models.CharField(choices=[('f7', 'FGA 0.7')], default='f7', max_length=3),
        ),
        migrations.CreateModel(
            name='EnemyAbility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.SmallIntegerField(choices=[(1, 'Basic'), (2, 'Elite'), (3, 'IN 3+'), (4, 'IN 4+'), (5, 'IN 5+)')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='EnemyUpgrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('ability', models.CharField(max_length=240)),
                ('type', models.CharField(choices=[('AST', 'Astromech'), ('CNN', 'Cannon'), ('CNF', 'Configuration'), ('CRW', 'Crew'), ('DVC', 'Device'), ('FRC', 'Force Power'), ('GNR', 'Gunner'), ('ILC', 'Illicit'), ('MSL', 'Missile'), ('MOD', 'Modification'), ('SNS', 'Sensor'), ('TAC', 'Tactical Relay'), ('TLN', 'Talent'), ('TCH', 'Tech'), ('TTL', 'Title'), ('TRP', 'Torpedo'), ('TRT', 'Turret'), ('SHP', 'Ship'), ('PLT', 'Pilot'), ('THR', 'Initiative'), ('FCH', 'Force Charge'), ('CHR', 'Charge'), ('WLD', 'Wildcard')], max_length=3)),
                ('charges', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='EnemyPilot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chassis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='xwtools.Chassis')),
                ('faction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='xwtools.Faction')),
                ('upgrades', models.ManyToManyField(through='campaign.EnemyAbility', to='campaign.EnemyUpgrade')),
            ],
        ),
        migrations.AddField(
            model_name='enemyability',
            name='upgrade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campaign.EnemyUpgrade'),
        ),
        migrations.AddField(
            model_name='mission',
            name='enemy_faction',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='xwtools.Faction'),
        ),
        migrations.AlterField(
            model_name='enemyability',
            name='level',
            field=models.SmallIntegerField(choices=[(1, 'Basic'), (2, 'Elite'), (3, 'IN 3+'), (4, 'IN 4+'), (5, 'IN 5+')], default=1),
        ),
        migrations.AddField(
            model_name='enemyability',
            name='pilot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abilities', to='campaign.EnemyPilot'),
        ),
        migrations.AddField(
            model_name='squadron',
            name='enemy',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='enemyability',
            name='level',
            field=models.SmallIntegerField(choices=[(1, 'Basic'), (2, 'Elite'), (3, 'In 3'), (4, 'In 4'), (5, 'In 5')], default=1),
        ),
        migrations.CreateModel(
            name='FlightGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('arrival', models.SmallIntegerField(default=1)),
                ('vector', models.CharField(max_length=3)),
                ('orders', models.CharField(choices=[('A', 'Attack'), ('S', 'Strike'), ('E', 'Escort'), ('X', 'Special')], default='S', max_length=1)),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flight_groups', to='campaign.Mission')),
            ],
        ),
        migrations.CreateModel(
            name='SquadMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('A', 'Add'), ('R', 'Replace')], default='A', max_length=1)),
                ('players', models.SmallIntegerField(default=1)),
                ('init', models.SmallIntegerField(default=1)),
                ('elite', models.BooleanField(default=False)),
                ('chassis', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='xwtools.Chassis')),
                ('flight_group', smart_selects.db_fields.ChainedForeignKey(chained_field='mission', chained_model_field='mission', on_delete=django.db.models.deletion.CASCADE, related_name='squad_members', to='campaign.FlightGroup')),
                ('mission', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='campaign.Mission')),
            ],
        ),
    ]
